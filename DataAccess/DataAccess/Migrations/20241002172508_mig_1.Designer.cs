// <auto-generated />
using System;
using DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DataAccess.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20241002172508_mig_1")]
    partial class mig_1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Entities.Entities.Field", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("ChildSchemaId")
                        .HasColumnType("integer");

                    b.Property<string>("FieldName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FieldType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ForeignKeyTable")
                        .HasColumnType("text");

                    b.Property<bool>("IsRequired")
                        .HasColumnType("boolean");

                    b.Property<int?>("MaxLength")
                        .HasColumnType("integer");

                    b.Property<int>("ObjectSchemaId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ChildSchemaId");

                    b.HasIndex("ObjectSchemaId");

                    b.ToTable("Fields");
                });

            modelBuilder.Entity("Entities.ObjectSchema", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ObjectType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ObjectSchemas");
                });

            modelBuilder.Entity("Entities.Entities.Field", b =>
                {
                    b.HasOne("Entities.ObjectSchema", "ChildSchema")
                        .WithMany()
                        .HasForeignKey("ChildSchemaId");

                    b.HasOne("Entities.ObjectSchema", "ObjectSchema")
                        .WithMany("Fields")
                        .HasForeignKey("ObjectSchemaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChildSchema");

                    b.Navigation("ObjectSchema");
                });

            modelBuilder.Entity("Entities.ObjectSchema", b =>
                {
                    b.Navigation("Fields");
                });
#pragma warning restore 612, 618
        }
    }
}
